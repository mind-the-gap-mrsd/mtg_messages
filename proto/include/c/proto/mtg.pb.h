/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8-dev */

#ifndef PB_MTG_FMS_PROTO_MTG_PB_H_INCLUDED
#define PB_MTG_FMS_PROTO_MTG_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _mtg_fms_Accelerometer {
    double acc_x;
    double acc_y;
    double acc_z;
} mtg_fms_Accelerometer;

typedef struct _mtg_fms_Ultrasonic {
    uint32_t sensor_a;
    uint32_t sensor_b;
    uint32_t sensor_c;
    uint32_t sensor_d;
    uint32_t sensor_e;
} mtg_fms_Ultrasonic;

typedef struct _mtg_fms_Infrared {
    uint32_t sensor_a;
    uint32_t sensor_b;
    uint32_t sensor_c;
    uint32_t sensor_d;
    uint32_t sensor_e;
    uint32_t sensor_f;
    uint32_t sensor_g;
    uint32_t sensor_h;
    uint32_t sensor_i;
    uint32_t sensor_j;
    uint32_t sensor_k;
    uint32_t sensor_l;
} mtg_fms_Infrared;

typedef struct _mtg_fms_Gyroscope {
    double gyro_x;
    double gyro_y;
    double gyro_z;
} mtg_fms_Gyroscope;

typedef struct _mtg_fms_Encoder_count {
    uint64_t left;
    uint64_t right;
} mtg_fms_Encoder_count;

typedef struct _mtg_fms_Encoder_speed {
    uint64_t left;
    uint64_t right;
} mtg_fms_Encoder_speed;

typedef struct _mtg_fms_LaserScanner {
    pb_size_t values_count;
    uint64_t values[700];
} mtg_fms_LaserScanner;

typedef struct _mtg_fms_AgentStatus {
    uint64_t battery_level;
} mtg_fms_AgentStatus;

typedef struct _mtg_fms_AprilTagRot {
    double r11;
    double r12;
    double r13;
    double r21;
    double r22;
    double r23;
    double r31;
    double r32;
    double r33;
} mtg_fms_AprilTagRot;

typedef struct _mtg_fms_AprilTagTrans {
    double x;
    double y;
    double z;
} mtg_fms_AprilTagTrans;

typedef struct _mtg_fms_AprilTagPose {
    mtg_fms_AprilTagRot R;
    mtg_fms_AprilTagTrans t;
} mtg_fms_AprilTagPose;

typedef struct _mtg_fms_AprilTagDetection {
    uint32_t tag_id;
    mtg_fms_AprilTagPose pose;
} mtg_fms_AprilTagDetection;

typedef struct _mtg_fms_AllDetections {
    pb_size_t tag_detections_count;
    mtg_fms_AprilTagDetection tag_detections[10];
} mtg_fms_AllDetections;

typedef struct _mtg_fms_SensorData {
    uint64_t timestamp_ns;
    uint32_t seq_id;
    mtg_fms_Accelerometer accel_data;
    mtg_fms_Gyroscope gyro_data;
    mtg_fms_Encoder_count count_data;
    mtg_fms_Encoder_speed speed_data;
    mtg_fms_Infrared ir_data;
    mtg_fms_Ultrasonic us_data;
    mtg_fms_LaserScanner lrf_data;
    mtg_fms_AgentStatus agent_status_data;
    mtg_fms_AllDetections april_detections;
} mtg_fms_SensorData;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define mtg_fms_Accelerometer_init_default       {0, 0, 0}
#define mtg_fms_Ultrasonic_init_default          {0, 0, 0, 0, 0}
#define mtg_fms_Infrared_init_default            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define mtg_fms_Gyroscope_init_default           {0, 0, 0}
#define mtg_fms_Encoder_count_init_default       {0, 0}
#define mtg_fms_Encoder_speed_init_default       {0, 0}
#define mtg_fms_LaserScanner_init_default        {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define mtg_fms_AgentStatus_init_default         {0}
#define mtg_fms_AprilTagRot_init_default         {0, 0, 0, 0, 0, 0, 0, 0, 0}
#define mtg_fms_AprilTagTrans_init_default       {0, 0, 0}
#define mtg_fms_AprilTagPose_init_default        {mtg_fms_AprilTagRot_init_default, mtg_fms_AprilTagTrans_init_default}
#define mtg_fms_AprilTagDetection_init_default   {0, mtg_fms_AprilTagPose_init_default}
#define mtg_fms_AllDetections_init_default       {0, {mtg_fms_AprilTagDetection_init_default, mtg_fms_AprilTagDetection_init_default, mtg_fms_AprilTagDetection_init_default, mtg_fms_AprilTagDetection_init_default, mtg_fms_AprilTagDetection_init_default, mtg_fms_AprilTagDetection_init_default, mtg_fms_AprilTagDetection_init_default, mtg_fms_AprilTagDetection_init_default, mtg_fms_AprilTagDetection_init_default, mtg_fms_AprilTagDetection_init_default}}
#define mtg_fms_SensorData_init_default          {0, 0, mtg_fms_Accelerometer_init_default, mtg_fms_Gyroscope_init_default, mtg_fms_Encoder_count_init_default, mtg_fms_Encoder_speed_init_default, mtg_fms_Infrared_init_default, mtg_fms_Ultrasonic_init_default, mtg_fms_LaserScanner_init_default, mtg_fms_AgentStatus_init_default, mtg_fms_AllDetections_init_default}
#define mtg_fms_Accelerometer_init_zero          {0, 0, 0}
#define mtg_fms_Ultrasonic_init_zero             {0, 0, 0, 0, 0}
#define mtg_fms_Infrared_init_zero               {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define mtg_fms_Gyroscope_init_zero              {0, 0, 0}
#define mtg_fms_Encoder_count_init_zero          {0, 0}
#define mtg_fms_Encoder_speed_init_zero          {0, 0}
#define mtg_fms_LaserScanner_init_zero           {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define mtg_fms_AgentStatus_init_zero            {0}
#define mtg_fms_AprilTagRot_init_zero            {0, 0, 0, 0, 0, 0, 0, 0, 0}
#define mtg_fms_AprilTagTrans_init_zero          {0, 0, 0}
#define mtg_fms_AprilTagPose_init_zero           {mtg_fms_AprilTagRot_init_zero, mtg_fms_AprilTagTrans_init_zero}
#define mtg_fms_AprilTagDetection_init_zero      {0, mtg_fms_AprilTagPose_init_zero}
#define mtg_fms_AllDetections_init_zero          {0, {mtg_fms_AprilTagDetection_init_zero, mtg_fms_AprilTagDetection_init_zero, mtg_fms_AprilTagDetection_init_zero, mtg_fms_AprilTagDetection_init_zero, mtg_fms_AprilTagDetection_init_zero, mtg_fms_AprilTagDetection_init_zero, mtg_fms_AprilTagDetection_init_zero, mtg_fms_AprilTagDetection_init_zero, mtg_fms_AprilTagDetection_init_zero, mtg_fms_AprilTagDetection_init_zero}}
#define mtg_fms_SensorData_init_zero             {0, 0, mtg_fms_Accelerometer_init_zero, mtg_fms_Gyroscope_init_zero, mtg_fms_Encoder_count_init_zero, mtg_fms_Encoder_speed_init_zero, mtg_fms_Infrared_init_zero, mtg_fms_Ultrasonic_init_zero, mtg_fms_LaserScanner_init_zero, mtg_fms_AgentStatus_init_zero, mtg_fms_AllDetections_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define mtg_fms_Accelerometer_acc_x_tag          1
#define mtg_fms_Accelerometer_acc_y_tag          2
#define mtg_fms_Accelerometer_acc_z_tag          3
#define mtg_fms_Ultrasonic_sensor_a_tag          1
#define mtg_fms_Ultrasonic_sensor_b_tag          2
#define mtg_fms_Ultrasonic_sensor_c_tag          3
#define mtg_fms_Ultrasonic_sensor_d_tag          4
#define mtg_fms_Ultrasonic_sensor_e_tag          5
#define mtg_fms_Infrared_sensor_a_tag            1
#define mtg_fms_Infrared_sensor_b_tag            2
#define mtg_fms_Infrared_sensor_c_tag            3
#define mtg_fms_Infrared_sensor_d_tag            4
#define mtg_fms_Infrared_sensor_e_tag            5
#define mtg_fms_Infrared_sensor_f_tag            6
#define mtg_fms_Infrared_sensor_g_tag            7
#define mtg_fms_Infrared_sensor_h_tag            8
#define mtg_fms_Infrared_sensor_i_tag            9
#define mtg_fms_Infrared_sensor_j_tag            10
#define mtg_fms_Infrared_sensor_k_tag            11
#define mtg_fms_Infrared_sensor_l_tag            12
#define mtg_fms_Gyroscope_gyro_x_tag             1
#define mtg_fms_Gyroscope_gyro_y_tag             2
#define mtg_fms_Gyroscope_gyro_z_tag             3
#define mtg_fms_Encoder_count_left_tag           1
#define mtg_fms_Encoder_count_right_tag          2
#define mtg_fms_Encoder_speed_left_tag           1
#define mtg_fms_Encoder_speed_right_tag          2
#define mtg_fms_LaserScanner_values_tag          1
#define mtg_fms_AgentStatus_battery_level_tag    1
#define mtg_fms_AprilTagRot_r11_tag              1
#define mtg_fms_AprilTagRot_r12_tag              2
#define mtg_fms_AprilTagRot_r13_tag              3
#define mtg_fms_AprilTagRot_r21_tag              4
#define mtg_fms_AprilTagRot_r22_tag              5
#define mtg_fms_AprilTagRot_r23_tag              6
#define mtg_fms_AprilTagRot_r31_tag              7
#define mtg_fms_AprilTagRot_r32_tag              8
#define mtg_fms_AprilTagRot_r33_tag              9
#define mtg_fms_AprilTagTrans_x_tag              1
#define mtg_fms_AprilTagTrans_y_tag              2
#define mtg_fms_AprilTagTrans_z_tag              3
#define mtg_fms_AprilTagPose_R_tag               1
#define mtg_fms_AprilTagPose_t_tag               2
#define mtg_fms_AprilTagDetection_tag_id_tag     1
#define mtg_fms_AprilTagDetection_pose_tag       2
#define mtg_fms_AllDetections_tag_detections_tag 1
#define mtg_fms_SensorData_timestamp_ns_tag      1
#define mtg_fms_SensorData_seq_id_tag            2
#define mtg_fms_SensorData_accel_data_tag        3
#define mtg_fms_SensorData_gyro_data_tag         4
#define mtg_fms_SensorData_count_data_tag        5
#define mtg_fms_SensorData_speed_data_tag        6
#define mtg_fms_SensorData_ir_data_tag           7
#define mtg_fms_SensorData_us_data_tag           8
#define mtg_fms_SensorData_lrf_data_tag          9
#define mtg_fms_SensorData_agent_status_data_tag 10
#define mtg_fms_SensorData_april_detections_tag  11

/* Struct field encoding specification for nanopb */
#define mtg_fms_Accelerometer_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, DOUBLE,   acc_x,             1) \
X(a, STATIC,   REQUIRED, DOUBLE,   acc_y,             2) \
X(a, STATIC,   REQUIRED, DOUBLE,   acc_z,             3)
#define mtg_fms_Accelerometer_CALLBACK NULL
#define mtg_fms_Accelerometer_DEFAULT NULL

#define mtg_fms_Ultrasonic_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   sensor_a,          1) \
X(a, STATIC,   REQUIRED, UINT32,   sensor_b,          2) \
X(a, STATIC,   REQUIRED, UINT32,   sensor_c,          3) \
X(a, STATIC,   REQUIRED, UINT32,   sensor_d,          4) \
X(a, STATIC,   REQUIRED, UINT32,   sensor_e,          5)
#define mtg_fms_Ultrasonic_CALLBACK NULL
#define mtg_fms_Ultrasonic_DEFAULT NULL

#define mtg_fms_Infrared_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   sensor_a,          1) \
X(a, STATIC,   REQUIRED, UINT32,   sensor_b,          2) \
X(a, STATIC,   REQUIRED, UINT32,   sensor_c,          3) \
X(a, STATIC,   REQUIRED, UINT32,   sensor_d,          4) \
X(a, STATIC,   REQUIRED, UINT32,   sensor_e,          5) \
X(a, STATIC,   REQUIRED, UINT32,   sensor_f,          6) \
X(a, STATIC,   REQUIRED, UINT32,   sensor_g,          7) \
X(a, STATIC,   REQUIRED, UINT32,   sensor_h,          8) \
X(a, STATIC,   REQUIRED, UINT32,   sensor_i,          9) \
X(a, STATIC,   REQUIRED, UINT32,   sensor_j,         10) \
X(a, STATIC,   REQUIRED, UINT32,   sensor_k,         11) \
X(a, STATIC,   REQUIRED, UINT32,   sensor_l,         12)
#define mtg_fms_Infrared_CALLBACK NULL
#define mtg_fms_Infrared_DEFAULT NULL

#define mtg_fms_Gyroscope_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, DOUBLE,   gyro_x,            1) \
X(a, STATIC,   REQUIRED, DOUBLE,   gyro_y,            2) \
X(a, STATIC,   REQUIRED, DOUBLE,   gyro_z,            3)
#define mtg_fms_Gyroscope_CALLBACK NULL
#define mtg_fms_Gyroscope_DEFAULT NULL

#define mtg_fms_Encoder_count_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT64,   left,              1) \
X(a, STATIC,   REQUIRED, UINT64,   right,             2)
#define mtg_fms_Encoder_count_CALLBACK NULL
#define mtg_fms_Encoder_count_DEFAULT NULL

#define mtg_fms_Encoder_speed_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT64,   left,              1) \
X(a, STATIC,   REQUIRED, UINT64,   right,             2)
#define mtg_fms_Encoder_speed_CALLBACK NULL
#define mtg_fms_Encoder_speed_DEFAULT NULL

#define mtg_fms_LaserScanner_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, UINT64,   values,            1)
#define mtg_fms_LaserScanner_CALLBACK NULL
#define mtg_fms_LaserScanner_DEFAULT NULL

#define mtg_fms_AgentStatus_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT64,   battery_level,     1)
#define mtg_fms_AgentStatus_CALLBACK NULL
#define mtg_fms_AgentStatus_DEFAULT NULL

#define mtg_fms_AprilTagRot_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, DOUBLE,   r11,               1) \
X(a, STATIC,   REQUIRED, DOUBLE,   r12,               2) \
X(a, STATIC,   REQUIRED, DOUBLE,   r13,               3) \
X(a, STATIC,   REQUIRED, DOUBLE,   r21,               4) \
X(a, STATIC,   REQUIRED, DOUBLE,   r22,               5) \
X(a, STATIC,   REQUIRED, DOUBLE,   r23,               6) \
X(a, STATIC,   REQUIRED, DOUBLE,   r31,               7) \
X(a, STATIC,   REQUIRED, DOUBLE,   r32,               8) \
X(a, STATIC,   REQUIRED, DOUBLE,   r33,               9)
#define mtg_fms_AprilTagRot_CALLBACK NULL
#define mtg_fms_AprilTagRot_DEFAULT NULL

#define mtg_fms_AprilTagTrans_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, DOUBLE,   x,                 1) \
X(a, STATIC,   REQUIRED, DOUBLE,   y,                 2) \
X(a, STATIC,   REQUIRED, DOUBLE,   z,                 3)
#define mtg_fms_AprilTagTrans_CALLBACK NULL
#define mtg_fms_AprilTagTrans_DEFAULT NULL

#define mtg_fms_AprilTagPose_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, MESSAGE,  R,                 1) \
X(a, STATIC,   REQUIRED, MESSAGE,  t,                 2)
#define mtg_fms_AprilTagPose_CALLBACK NULL
#define mtg_fms_AprilTagPose_DEFAULT NULL
#define mtg_fms_AprilTagPose_R_MSGTYPE mtg_fms_AprilTagRot
#define mtg_fms_AprilTagPose_t_MSGTYPE mtg_fms_AprilTagTrans

#define mtg_fms_AprilTagDetection_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   tag_id,            1) \
X(a, STATIC,   REQUIRED, MESSAGE,  pose,              2)
#define mtg_fms_AprilTagDetection_CALLBACK NULL
#define mtg_fms_AprilTagDetection_DEFAULT NULL
#define mtg_fms_AprilTagDetection_pose_MSGTYPE mtg_fms_AprilTagPose

#define mtg_fms_AllDetections_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, MESSAGE,  tag_detections,    1)
#define mtg_fms_AllDetections_CALLBACK NULL
#define mtg_fms_AllDetections_DEFAULT NULL
#define mtg_fms_AllDetections_tag_detections_MSGTYPE mtg_fms_AprilTagDetection

#define mtg_fms_SensorData_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT64,   timestamp_ns,      1) \
X(a, STATIC,   REQUIRED, UINT32,   seq_id,            2) \
X(a, STATIC,   REQUIRED, MESSAGE,  accel_data,        3) \
X(a, STATIC,   REQUIRED, MESSAGE,  gyro_data,         4) \
X(a, STATIC,   REQUIRED, MESSAGE,  count_data,        5) \
X(a, STATIC,   REQUIRED, MESSAGE,  speed_data,        6) \
X(a, STATIC,   REQUIRED, MESSAGE,  ir_data,           7) \
X(a, STATIC,   REQUIRED, MESSAGE,  us_data,           8) \
X(a, STATIC,   REQUIRED, MESSAGE,  lrf_data,          9) \
X(a, STATIC,   REQUIRED, MESSAGE,  agent_status_data,  10) \
X(a, STATIC,   REQUIRED, MESSAGE,  april_detections,  11)
#define mtg_fms_SensorData_CALLBACK NULL
#define mtg_fms_SensorData_DEFAULT NULL
#define mtg_fms_SensorData_accel_data_MSGTYPE mtg_fms_Accelerometer
#define mtg_fms_SensorData_gyro_data_MSGTYPE mtg_fms_Gyroscope
#define mtg_fms_SensorData_count_data_MSGTYPE mtg_fms_Encoder_count
#define mtg_fms_SensorData_speed_data_MSGTYPE mtg_fms_Encoder_speed
#define mtg_fms_SensorData_ir_data_MSGTYPE mtg_fms_Infrared
#define mtg_fms_SensorData_us_data_MSGTYPE mtg_fms_Ultrasonic
#define mtg_fms_SensorData_lrf_data_MSGTYPE mtg_fms_LaserScanner
#define mtg_fms_SensorData_agent_status_data_MSGTYPE mtg_fms_AgentStatus
#define mtg_fms_SensorData_april_detections_MSGTYPE mtg_fms_AllDetections

extern const pb_msgdesc_t mtg_fms_Accelerometer_msg;
extern const pb_msgdesc_t mtg_fms_Ultrasonic_msg;
extern const pb_msgdesc_t mtg_fms_Infrared_msg;
extern const pb_msgdesc_t mtg_fms_Gyroscope_msg;
extern const pb_msgdesc_t mtg_fms_Encoder_count_msg;
extern const pb_msgdesc_t mtg_fms_Encoder_speed_msg;
extern const pb_msgdesc_t mtg_fms_LaserScanner_msg;
extern const pb_msgdesc_t mtg_fms_AgentStatus_msg;
extern const pb_msgdesc_t mtg_fms_AprilTagRot_msg;
extern const pb_msgdesc_t mtg_fms_AprilTagTrans_msg;
extern const pb_msgdesc_t mtg_fms_AprilTagPose_msg;
extern const pb_msgdesc_t mtg_fms_AprilTagDetection_msg;
extern const pb_msgdesc_t mtg_fms_AllDetections_msg;
extern const pb_msgdesc_t mtg_fms_SensorData_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define mtg_fms_Accelerometer_fields &mtg_fms_Accelerometer_msg
#define mtg_fms_Ultrasonic_fields &mtg_fms_Ultrasonic_msg
#define mtg_fms_Infrared_fields &mtg_fms_Infrared_msg
#define mtg_fms_Gyroscope_fields &mtg_fms_Gyroscope_msg
#define mtg_fms_Encoder_count_fields &mtg_fms_Encoder_count_msg
#define mtg_fms_Encoder_speed_fields &mtg_fms_Encoder_speed_msg
#define mtg_fms_LaserScanner_fields &mtg_fms_LaserScanner_msg
#define mtg_fms_AgentStatus_fields &mtg_fms_AgentStatus_msg
#define mtg_fms_AprilTagRot_fields &mtg_fms_AprilTagRot_msg
#define mtg_fms_AprilTagTrans_fields &mtg_fms_AprilTagTrans_msg
#define mtg_fms_AprilTagPose_fields &mtg_fms_AprilTagPose_msg
#define mtg_fms_AprilTagDetection_fields &mtg_fms_AprilTagDetection_msg
#define mtg_fms_AllDetections_fields &mtg_fms_AllDetections_msg
#define mtg_fms_SensorData_fields &mtg_fms_SensorData_msg

/* Maximum encoded size of messages (where known) */
#define mtg_fms_Accelerometer_size               27
#define mtg_fms_AgentStatus_size                 11
#define mtg_fms_AllDetections_size               1220
#define mtg_fms_AprilTagDetection_size           120
#define mtg_fms_AprilTagPose_size                112
#define mtg_fms_AprilTagRot_size                 81
#define mtg_fms_AprilTagTrans_size               27
#define mtg_fms_Encoder_count_size               22
#define mtg_fms_Encoder_speed_size               22
#define mtg_fms_Gyroscope_size                   27
#define mtg_fms_Infrared_size                    72
#define mtg_fms_LaserScanner_size                7700
#define mtg_fms_SensorData_size                  9168
#define mtg_fms_Ultrasonic_size                  30

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
